/***** BEGIN LICENSE BLOCK *****
 * Version: CPL 1.0/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Common Public
 * License Version 1.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.eclipse.org/legal/cpl-v10.html
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * Copyright (C) 2006 Charles O Nutter <headius@headius.com>
 * Copyright (C) 2007 Ola Bini <ola@ologix.com>
 * 
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the CPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the CPL, the GPL or the LGPL.
 ***** END LICENSE BLOCK *****/
package org.jruby.ast.executable;

import java.util.Map;
import java.util.HashMap;

/**
 * AUTOGENERATED. Change template, not generated file.
 */
public abstract class YARVInstructions {
    public static final int NOP = 0;
    public static final int GETLOCAL = 1;
    public static final int SETLOCAL = 2;
    public static final int GETSPECIAL = 3;
    public static final int SETSPECIAL = 4;
    public static final int GETDYNAMIC = 5;
    public static final int SETDYNAMIC = 6;
    public static final int GETINSTANCEVARIABLE = 7;
    public static final int SETINSTANCEVARIABLE = 8;
    public static final int GETCLASSVARIABLE = 9;
    public static final int SETCLASSVARIABLE = 10;
    public static final int GETCONSTANT = 11;
    public static final int SETCONSTANT = 12;
    public static final int GETGLOBAL = 13;
    public static final int SETGLOBAL = 14;
    public static final int PUTNIL = 15;
    public static final int PUTSELF = 16;
    public static final int PUTOBJECT = 17;
    public static final int PUTSPECIALOBJECT = 18;
    public static final int PUTISEQ = 19;
    public static final int PUTSTRING = 20;
    public static final int CONCATSTRINGS = 21;
    public static final int TOSTRING = 22;
    public static final int TOREGEXP = 23;
    public static final int NEWARRAY = 24;
    public static final int DUPARRAY = 25;
    public static final int EXPANDARRAY = 26;
    public static final int CONCATARRAY = 27;
    public static final int SPLATARRAY = 28;
    public static final int CHECKINCLUDEARRAY = 29;
    public static final int NEWHASH = 30;
    public static final int NEWRANGE = 31;
    public static final int POP = 32;
    public static final int DUP = 33;
    public static final int DUPN = 34;
    public static final int SWAP = 35;
    public static final int REPUT = 36;
    public static final int TOPN = 37;
    public static final int SETN = 38;
    public static final int ADJUSTSTACK = 39;
    public static final int DEFINED = 40;
    public static final int TRACE = 41;
    public static final int DEFINECLASS = 42;
    public static final int SEND = 43;
    public static final int INVOKESUPER = 44;
    public static final int INVOKEBLOCK = 45;
    public static final int LEAVE = 46;
    public static final int FINISH = 47;
    public static final int THROW = 48;
    public static final int JUMP = 49;
    public static final int BRANCHIF = 50;
    public static final int BRANCHUNLESS = 51;
    public static final int GETINLINECACHE = 52;
    public static final int ONCEINLINECACHE = 53;
    public static final int SETINLINECACHE = 54;
    public static final int OPT_CASE_DISPATCH = 55;
    public static final int OPT_CHECKENV = 56;
    public static final int OPT_PLUS = 57;
    public static final int OPT_MINUS = 58;
    public static final int OPT_MULT = 59;
    public static final int OPT_DIV = 60;
    public static final int OPT_MOD = 61;
    public static final int OPT_EQ = 62;
    public static final int OPT_NEQ = 63;
    public static final int OPT_LT = 64;
    public static final int OPT_LE = 65;
    public static final int OPT_GT = 66;
    public static final int OPT_GE = 67;
    public static final int OPT_LTLT = 68;
    public static final int OPT_AREF = 69;
    public static final int OPT_ASET = 70;
    public static final int OPT_LENGTH = 71;
    public static final int OPT_SIZE = 72;
    public static final int OPT_SUCC = 73;
    public static final int OPT_NOT = 74;
    public static final int OPT_REGEXPMATCH1 = 75;
    public static final int OPT_REGEXPMATCH2 = 76;
    public static final int OPT_CALL_C_FUNCTION = 77;
    public static final int BITBLT = 78;
    public static final int ANSWER = 79;

    public static final Map INSTS_TO_INDEX = new HashMap();
    static {
        INSTS_TO_INDEX.put("nop", new Integer(0));
        INSTS_TO_INDEX.put("getlocal", new Integer(1));
        INSTS_TO_INDEX.put("setlocal", new Integer(2));
        INSTS_TO_INDEX.put("getspecial", new Integer(3));
        INSTS_TO_INDEX.put("setspecial", new Integer(4));
        INSTS_TO_INDEX.put("getdynamic", new Integer(5));
        INSTS_TO_INDEX.put("setdynamic", new Integer(6));
        INSTS_TO_INDEX.put("getinstancevariable", new Integer(7));
        INSTS_TO_INDEX.put("setinstancevariable", new Integer(8));
        INSTS_TO_INDEX.put("getclassvariable", new Integer(9));
        INSTS_TO_INDEX.put("setclassvariable", new Integer(10));
        INSTS_TO_INDEX.put("getconstant", new Integer(11));
        INSTS_TO_INDEX.put("setconstant", new Integer(12));
        INSTS_TO_INDEX.put("getglobal", new Integer(13));
        INSTS_TO_INDEX.put("setglobal", new Integer(14));
        INSTS_TO_INDEX.put("putnil", new Integer(15));
        INSTS_TO_INDEX.put("putself", new Integer(16));
        INSTS_TO_INDEX.put("putobject", new Integer(17));
        INSTS_TO_INDEX.put("putspecialobject", new Integer(18));
        INSTS_TO_INDEX.put("putiseq", new Integer(19));
        INSTS_TO_INDEX.put("putstring", new Integer(20));
        INSTS_TO_INDEX.put("concatstrings", new Integer(21));
        INSTS_TO_INDEX.put("tostring", new Integer(22));
        INSTS_TO_INDEX.put("toregexp", new Integer(23));
        INSTS_TO_INDEX.put("newarray", new Integer(24));
        INSTS_TO_INDEX.put("duparray", new Integer(25));
        INSTS_TO_INDEX.put("expandarray", new Integer(26));
        INSTS_TO_INDEX.put("concatarray", new Integer(27));
        INSTS_TO_INDEX.put("splatarray", new Integer(28));
        INSTS_TO_INDEX.put("checkincludearray", new Integer(29));
        INSTS_TO_INDEX.put("newhash", new Integer(30));
        INSTS_TO_INDEX.put("newrange", new Integer(31));
        INSTS_TO_INDEX.put("pop", new Integer(32));
        INSTS_TO_INDEX.put("dup", new Integer(33));
        INSTS_TO_INDEX.put("dupn", new Integer(34));
        INSTS_TO_INDEX.put("swap", new Integer(35));
        INSTS_TO_INDEX.put("reput", new Integer(36));
        INSTS_TO_INDEX.put("topn", new Integer(37));
        INSTS_TO_INDEX.put("setn", new Integer(38));
        INSTS_TO_INDEX.put("adjuststack", new Integer(39));
        INSTS_TO_INDEX.put("defined", new Integer(40));
        INSTS_TO_INDEX.put("trace", new Integer(41));
        INSTS_TO_INDEX.put("defineclass", new Integer(42));
        INSTS_TO_INDEX.put("send", new Integer(43));
        INSTS_TO_INDEX.put("invokesuper", new Integer(44));
        INSTS_TO_INDEX.put("invokeblock", new Integer(45));
        INSTS_TO_INDEX.put("leave", new Integer(46));
        INSTS_TO_INDEX.put("finish", new Integer(47));
        INSTS_TO_INDEX.put("throw", new Integer(48));
        INSTS_TO_INDEX.put("jump", new Integer(49));
        INSTS_TO_INDEX.put("branchif", new Integer(50));
        INSTS_TO_INDEX.put("branchunless", new Integer(51));
        INSTS_TO_INDEX.put("getinlinecache", new Integer(52));
        INSTS_TO_INDEX.put("onceinlinecache", new Integer(53));
        INSTS_TO_INDEX.put("setinlinecache", new Integer(54));
        INSTS_TO_INDEX.put("opt_case_dispatch", new Integer(55));
        INSTS_TO_INDEX.put("opt_checkenv", new Integer(56));
        INSTS_TO_INDEX.put("opt_plus", new Integer(57));
        INSTS_TO_INDEX.put("opt_minus", new Integer(58));
        INSTS_TO_INDEX.put("opt_mult", new Integer(59));
        INSTS_TO_INDEX.put("opt_div", new Integer(60));
        INSTS_TO_INDEX.put("opt_mod", new Integer(61));
        INSTS_TO_INDEX.put("opt_eq", new Integer(62));
        INSTS_TO_INDEX.put("opt_neq", new Integer(63));
        INSTS_TO_INDEX.put("opt_lt", new Integer(64));
        INSTS_TO_INDEX.put("opt_le", new Integer(65));
        INSTS_TO_INDEX.put("opt_gt", new Integer(66));
        INSTS_TO_INDEX.put("opt_ge", new Integer(67));
        INSTS_TO_INDEX.put("opt_ltlt", new Integer(68));
        INSTS_TO_INDEX.put("opt_aref", new Integer(69));
        INSTS_TO_INDEX.put("opt_aset", new Integer(70));
        INSTS_TO_INDEX.put("opt_length", new Integer(71));
        INSTS_TO_INDEX.put("opt_size", new Integer(72));
        INSTS_TO_INDEX.put("opt_succ", new Integer(73));
        INSTS_TO_INDEX.put("opt_not", new Integer(74));
        INSTS_TO_INDEX.put("opt_regexpmatch1", new Integer(75));
        INSTS_TO_INDEX.put("opt_regexpmatch2", new Integer(76));
        INSTS_TO_INDEX.put("opt_call_c_function", new Integer(77));
        INSTS_TO_INDEX.put("bitblt", new Integer(78));
        INSTS_TO_INDEX.put("answer", new Integer(79));
    }
    public static int instruction(String name) {
        return ((Integer)INSTS_TO_INDEX.get(name)).intValue();
    }

    public static final String[] INDEX_TO_NAME = new String[] { 
                      "nop", 
                      "getlocal", 
                      "setlocal", 
                      "getspecial", 
                      "setspecial", 
                      "getdynamic", 
                      "setdynamic", 
                      "getinstancevariable", 
                      "setinstancevariable", 
                      "getclassvariable", 
                      "setclassvariable", 
                      "getconstant", 
                      "setconstant", 
                      "getglobal", 
                      "setglobal", 
                      "putnil", 
                      "putself", 
                      "putobject", 
                      "putspecialobject", 
                      "putiseq", 
                      "putstring", 
                      "concatstrings", 
                      "tostring", 
                      "toregexp", 
                      "newarray", 
                      "duparray", 
                      "expandarray", 
                      "concatarray", 
                      "splatarray", 
                      "checkincludearray", 
                      "newhash", 
                      "newrange", 
                      "pop", 
                      "dup", 
                      "dupn", 
                      "swap", 
                      "reput", 
                      "topn", 
                      "setn", 
                      "adjuststack", 
                      "defined", 
                      "trace", 
                      "defineclass", 
                      "send", 
                      "invokesuper", 
                      "invokeblock", 
                      "leave", 
                      "finish", 
                      "throw", 
                      "jump", 
                      "branchif", 
                      "branchunless", 
                      "getinlinecache", 
                      "onceinlinecache", 
                      "setinlinecache", 
                      "opt_case_dispatch", 
                      "opt_checkenv", 
                      "opt_plus", 
                      "opt_minus", 
                      "opt_mult", 
                      "opt_div", 
                      "opt_mod", 
                      "opt_eq", 
                      "opt_neq", 
                      "opt_lt", 
                      "opt_le", 
                      "opt_gt", 
                      "opt_ge", 
                      "opt_ltlt", 
                      "opt_aref", 
                      "opt_aset", 
                      "opt_length", 
                      "opt_size", 
                      "opt_succ", 
                      "opt_not", 
                      "opt_regexpmatch1", 
                      "opt_regexpmatch2", 
                      "opt_call_c_function", 
                      "bitblt", 
                      "answer"};

    public static String name(int index) {
        return INDEX_TO_NAME[index];
    }

    public static final int ARGS_SPLAT_FLAG = 2;
    public static final int ARGS_BLOCKARG_FLAG = 4;
    public static final int FCALL_FLAG = 8;
    public static final int VCALL_FLAG = 16;
    public static final int TAILCALL_FLAG = 32;
    public static final int TAILRECURSION_FLAG = 64;
    public static final int SUPER = 128;
}
